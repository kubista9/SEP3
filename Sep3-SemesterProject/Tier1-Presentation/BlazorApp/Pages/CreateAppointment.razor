@page "/CreateAppointment"
@* @attribute [Authorize] *@
@using Domain.Models
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@using BlazorApp.Services
@inject IDoctorService DoctorService
@inject IAppointmentService AppointmentService
@inject NavigationManager NavMgr
@inject IAuthService authService

<div class="card">
@if (doctors == null)
    {
        <label>Loading users...</label>
    }
    else if (!doctors.Any())
    {
        <label>No users, you cannot create a post without assignee.</label>
    }
    else
    {
        <h3>CreateBooking</h3>
        <div class="form-group field">
            <label>Doctor:</label>
            <select @bind="selectedDoctorId">
                <option>Choose</option>
                @foreach (Doctor doctor in doctors)
                {
                    <option value="@doctor.Id">@doctor.FullName</option>
                }
            </select>
        </div>
        <div class="form-group field">
            <label>Date:</label>
            <InputDate @bind-Value="appointmentDate" format="dd-MM-yyyy"/>
        </div>
        <div class="form-group field">
            <label>Time:</label>
            <select @bind="selectedAppointmentTime">
                <option>Choose</option>
                @* @foreach (Appointment appointment in appointments) *@
                @* { *@
                @*     $1$ if (appointment.IsAvailable(selectedDoctorId, appointmentDate)) #1# *@
                @*     $1$ { #1# *@
                @*     $1$     <option value="@appointment.Id">@appointment.Time</option> #1# *@
                @*     $1$ } #1# *@
                @*     <option value="@appointment.Id">@appointment.Time</option> *@
                @* } *@
                <option value="9:00">9:00</option>
                <option value="10:00">10:00</option>
                <option value="11:00">11:00</option>
                <option value="12:00">12:00</option>
                <option value="13:00">13:00</option>
                <option value="14:00">14:00</option>
                <option value="15:00">15:00</option>
                <option value="16:00">16:00</option>
                <option value="17:00">17:00</option>
            </select>
        </div>
        <div class="button-row">
            @if (!string.IsNullOrEmpty(msg))
            {
                <label style="color: red">@msg</label>
            }
            <button @onclick="Create" class="acceptbtn">Create</button>
        </div>
    }
</div>

@code {
    private List<Appointment> appointments;
    private IEnumerable<Doctor>? doctors;
    private int? selectedDoctorId;
    private DateOnly appointmentDate;
    private string selectedAppointmentTime;
    

    private string msg = "";

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            doctors = await DoctorService.GetValidatedDoctorsAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async Task Create()
    {
        msg = "";
        
        if (selectedDoctorId == null)
        {
            msg = "You must select a doctor!";
            return;
        }

        if (selectedAppointmentTime == null)
        {
            msg = "You must select a time!";
        }

        try
        {
            AppointmentCreationDto dto = new((int)selectedDoctorId, 0,(appointmentDate.Day + "/" + appointmentDate.Month + "/" + appointmentDate.Year ), selectedAppointmentTime); //select somehow the user that created this post
            await AppointmentService.CreateAsync(dto, authService.getJwt());
            NavMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    // private async Task IsAvailable(int selectedDoctorId, string time)
    // {
    //     try
    //     {
    //         
    //     }
    //     catch (Exception e)
    //     {
    //         Console.WriteLine(e);
    //         throw;
    //     }
    // }
}