@page "/Patient/Register"
@using Domain.DTOs
@using BlazorApp.Services
@inject IAuthService authService
@inject NavigationManager navMgr

<AuthorizeView>
    <NotAuthorized>
       <body>
       <div class="user">
           <h3 class="user__title">Patients registration</h3>
       
           <form class="form">
               <div class="form__group">
                   <input type="text" placeholder="Full Name" class="form__input" @bind="fullName"/>
               </div>
               <div class="form__group">
                   <input type="text" placeholder="Username" class="form__input" @bind="userName"/>
               </div>
               <div class="form__group">
                   <input type="password" placeholder="Password" class="form__input" @bind="password"/>
               </div>

               <button class="registerbtn" type="button" @onclick="RegisterAsync">Register</button>

           </form>
            @if (!string.IsNullOrEmpty(errorLabel))
                       {
                           <div class="field">
                               <label style="color: red">
                                   @errorLabel
                               </label>
                           </div>
                       }

       </div>
       </body>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string fullName;
    private string userName;
    private string password;
    private string errorLabel;

    private async Task RegisterAsync()
    {
        errorLabel = "";
        try
        {
            RegisterPatientDto dto = new RegisterPatientDto(fullName, userName, password);
            
            await authService.RegisterPatientAsync(dto);
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

    
}